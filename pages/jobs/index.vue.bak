<template>
  <!-- Begin Main Page Div -->
  <div>
    <!-- Begin Two Column Card Container -->
    <v-card
      class="d-flex rounded"
      width="100%"
      color="transparent"
      flat
      height="85vh"
    >
      <!-- Begin Left Column -->
      <v-card class="rounded" outlined width="100%">
        <!-- Begin Jobs List -->

        <v-list subheader height="95%" class="pt-5" two-line
          ><v-list-item>
            <!-- Begin Search Box -->

            <v-text-field
              v-model="searchKeyword"
              dense
              class="px-2"
              outlined
              prepend-inner-icon="mdi-magnify"
              placeholder="Search conversations"
            ></v-text-field>

            <!-- End Search Box -->
          </v-list-item>
          <v-divider></v-divider>

          <!-- Begin Job List When No Search Result -->

          <div class="overflow-scroll" v-if="!searchKeyword">
            <v-list-item
              class="conversation"
              v-for="item in items"
              :key="item.id"
              :class="
                item.id === currentItem.id ||
                selectedItems.findIndex((x) => x.id === item.id) > -1
                  ? 'active'
                  : ''
              "
              @click="active(item)"
            >
              <!-- <v-list-item-avatar color="primary" size="40">
                  <v-icon class="grey lighten-1" dark> mdi-folder </v-icon>AS
                </v-list-item-avatar> -->

              <v-list-item-action class="mx-0 px-0 mr-3">
                <v-checkbox
                  v-model="item.selected"
                  dense
                  @click="selectJob(item)"
                ></v-checkbox>
              </v-list-item-action>

              <v-list-item-content class="mr-10 px-0">
                <v-list-item-title
                  v-text="`${item.sender} Adeyanju Oluekmios`"
                ></v-list-item-title>

                <v-list-item-subtitle
                  v-text="`Due: 27th Jan, 20`"
                ></v-list-item-subtitle>
              </v-list-item-content>
              <v-list-item-content class="mr-2">
                <v-list-item-subtitle
                  v-text="`Frame: ${item.sender}`"
                ></v-list-item-subtitle>

                <v-list-item-subtitle
                  v-text="`Lens: ${item.message}`"
                ></v-list-item-subtitle>
              </v-list-item-content>

              <v-list-item-content class="px-0 mx-0">
                <v-list-item-subtitle class="caption">
                  Status:
                  <v-chip class="px-1 py-0" small color="warning"
                    >odiooi</v-chip
                  ></v-list-item-subtitle
                >
              </v-list-item-content>
            </v-list-item>
          </div>

          <!-- Begin Search Result -->

          <div class="overflow-scroll" v-else>
            <v-list-item class="caption">Search Results</v-list-item>
            <v-list-item
              class="conversation"
              v-for="item in items"
              :key="item.id"
              :class="
                item.id === currentItem.id ||
                selectedItems.findIndex((x) => x.id === item.id) > -1
                  ? 'active'
                  : ''
              "
              @click="active(item)"
            >
              <!-- <v-list-item-avatar color="primary" size="40">
                  <v-icon class="grey lighten-1" dark> mdi-folder </v-icon>AS
                </v-list-item-avatar> -->

              <v-list-item-action class="mx-0 px-0 mr-3">
                <v-checkbox
                  v-model="item.selected"
                  dense
                  rounded
                  @click="selectJob(item)"
                ></v-checkbox>
              </v-list-item-action>

              <v-list-item-content class="mr-10 px-0">
                <v-list-item-title
                  v-text="`${item.sender} Adeyanju Oluekmios`"
                ></v-list-item-title>

                <v-list-item-subtitle
                  v-text="`Due: 27th Jan, 20`"
                ></v-list-item-subtitle>
              </v-list-item-content>
              <v-list-item-content class="mr-2">
                <v-list-item-subtitle
                  v-text="`Frame: ${item.sender}`"
                ></v-list-item-subtitle>

                <v-list-item-subtitle
                  v-text="`Lens: ${item.message}`"
                ></v-list-item-subtitle>
              </v-list-item-content>

              <v-list-item-content class="px-0 mx-0">
                <v-list-item-subtitle class="caption">
                  Status:
                  <v-chip class="px-1 py-0" small color="warning"
                    >odiooi</v-chip
                  ></v-list-item-subtitle
                >
              </v-list-item-content>
            </v-list-item>
          </div>
          <!-- End Search Result  -->

          <!-- Begin Action Button -->
          <v-btn class="mb-10" color="primary" dark absolute bottom right fab
            ><v-icon>mdi-plus</v-icon>
          </v-btn>
          <!-- End Action Button -->
        </v-list>

        <!-- End Job Lists -->
      </v-card>

      <!-- End Left Column -->
      <!-- <v-card height="500px">
            <div v-for="(group, key) in groupedPeople" :key="key">
              {{ key }}
              <p v-for="person in group" :key="person.name">
                {{ person.name }}
              </p>
            </div>
          </v-card> -->
    </v-card>

    <!-- End Two Column Card Container -->
  </div>

  <!-- End Main Page Div -->
</template>

<script>
export default {
  name: "Jobs",
  data: () => {
    return {
      searchKeyword: "",
      items: [
        {
          id: 1,
          sender: "Samuel",
          message: "How are you",
          type: "email",
          read: false,
          selected: false,
        },
        {
          id: 2,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 3,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 4,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 5,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 6,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 7,
          sender: "Tosin",
          message: "Sup Whaisd ",
          type: "chat",
          read: false,
          selected: false,
        },
        {
          id: 8,
          sender: "Samuel",
          message: "How are you",
          type: "email",
          read: false,
          selected: false,
        },
        {
          id: 9,
          sender: "Samuel",
          message: "How are you",
          type: "email",
          read: false,
          selected: false,
        },
        {
          id: 10,
          sender: "Samuel",
          message: "How are you",
          type: "email",
          read: false,
          selected: false,
        },
      ],
      itemsPerPageArray: [4, 8, 12],
      search: "",
      filter: {},
      sortDesc: false,
      page: 1,
      itemsPerPage: 4,
      sortBy: "sender",
      keys: ["id", "sender", "message", "type"],
      currentItem: "",
      selectedItems: [],
    };
  },

  computed: {
    items() {
      return this.items;
    },
    numberOfPages() {
      return Math.ceil(this.items.length / this.itemsPerPage);
    },
    filteredKeys() {
      return this.keys.filter((key) => key !== "Name");
    },
  },
  methods: {
    selectJob(item) {
      var foundSelected = this.selectedItems.findIndex((x) => x.id === item.id);
      if (foundSelected > -1) {
        this.selectedItems.splice(foundSelected, 1);
      } else this.selectedItems.push(item);
      // var findIndex = this.items.findIndex(x => x.id === item.id);
      // this.items[findIndex].selected = !this.items[findIndex].selected;
    },

    active(item) {
      this.currentItem = item;
      this.searchKeyword = "";
    },
    formerPage() {
      if (this.page - 1 >= 1) this.page -= 1;
    },
    updateItemsPerPage(number) {
      this.itemsPerPage = number;
    },
  },
};
</script>

<style scoped>
.filter {
  border-radius: 50px;
}
.conversation:hover {
  background-color: rgba(156, 156, 156, 0.294);
}

.active {
  background-color: rgba(156, 156, 156, 0.294);
}

.not-rounded {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-top-right-radius: 15px !important;
  border-top-left-radius: 15px !important;
}
.overflow-scroll {
  height: 87%;
  overflow: auto;
}
.conversation-list {
  max-width: 100%;
}

.job-messages {
  height: 100%;
}


</style>>
